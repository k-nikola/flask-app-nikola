name: CI/CD

on:
  pull_request:
    types: [closed]
    branches: [main]
    paths:
      - webapp/**
      - .github/**
      - requirements.txt
  push:
    branches: [main]
    paths:
      - webapp/**
      - .github/**
      - requirements.txt

jobs:
  test:
    runs-on: ubuntu-20.04
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        ports:
          - 3306:3306
    steps:
      - uses: actions/checkout@v2
      - name: Setup runner db
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        run: |
          sudo apt-get update
          sudo mysql -uroot -h127.0.0.1 -p$MYSQL_ROOT_PASSWORD -e 'CREATE DATABASE IF NOT EXISTS flask_nikola;'
      - name: Setup selenium
        run: |
          sudo pip3 uninstall selenium
          sudo pip3 install selenium==3.141.0
      - name: Setup chrome
        run: |
          sudo apt-get install -y google-chrome-stable
          sudo wget https://chromedriver.storage.googleapis.com/2.41/chromedriver_linux64.zip
          sudo unzip chromedriver_linux64.zip && sudo mv chromedriver ${{ secrets.DRIVER_LOCATION }}
      - name: Install requirements
        run: |
          sudo pip3 install -r requirements.txt
      - name: Setup and start the app
        env:
          db_uri: ${{ secrets.DB_URI }}
          secret_key: ${{ secrets.SECRET_KEY }}
        run: |
          nohup gunicorn -b 0.0.0.0:5000 webapp:app  2>&1 >> log.txt &
      - name: Run the tests
        env:
          driver_location: ${{ secrets.DRIVER_LOCATION }}
          app_url: ${{ secrets.APP_URL }}
        run: |
          export app_url driver_location
          echo "***************************************"
          echo "Starting tests:"
          echo "***************************************"
          python3 test.py

  build:
    needs: [test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Automated version-bump
        id: version-bump
        uses: 'phips28/gh-action-bump-version@master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          minor-wording: 'add,added'
          major-wording: 'major,Major'
          patch-wording: 'patch,fix'

      - name: Docker login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: t0b9/flask-app-nikola:latest, t0b9/flask-app-nikola:${{ steps.version-bump.outputs.newTag }}
    outputs:
      app_ver: ${{ steps.version-bump.outputs.newTag }}

  dispatch:
    needs: [build]
    runs-on: ubuntu-20.04
    steps:
      - name: Start the main workflow of the infrastructure repo
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          repository: k-nikola/flask-app-infra
          event-type: new-build
          client-payload: '{ "app_ver": "${{ needs.build.outputs.app_ver }}" }'
